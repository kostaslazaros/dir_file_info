#!/bin/bash

if [ "$#" -eq 0 ]; then
    startdir="$HOME"
    depth=1

elif [ "$#" -eq 1 ]; then
    startdir="$1"
    depth=64000

else
    startdir="$1"
    depth="$2"
fi


echo "Monitored directory:" ${startdir}
echo "Depth:" $2
echo " "

tabs 12


FILENO=0
DIRNO=0
MY_ARRAY=()

while read file; do
    if [ -d "${file}" ]; then
        DIRNO=$(( $DIRNO + 1 ))
    else
        FILENO=$(( $FILENO + 1 ))
        index=$(stat -c "%a " "${file}")
        MY_ARRAY[${index}]=$(( MY_ARRAY[${index}] + 1 ))
    fi

# redirects the output of this cmd as single line input to the while loop above
done <<<$(find ${startdir} -maxdepth ${depth} -name "*")

echo "Number of directories: ${DIRNO}"
echo "Number of files: ${FILENO}"
# -d refers to max depth, -h means human readable, f means select only first field
echo "Total size on disk: $(du ${startdir} -d 0 -h | cut -f1)"
echo " "

echo "Permissions on files"
echo " "

tabs 2


for i in "${!MY_ARRAY[@]}"; do
    percentage=$(( ${MY_ARRAY[$i]} * 100 / ${FILENO} ))
    if [ ${percentage} -eq 0 ]; then
        percentage=1
    fi
    printf "%s\t%s\n" "$i" "${percentage}%"
done

tabs 8

echo " "
echo "Largest files"
echo "$(find ${startdir} -maxdepth ${depth} -type f -printf '%s\t%P\n' | sort -nr | nl | head -5)"
echo " "


echo "Lastly accessed files"
# print lastly accessed files(x means last access date and n means file name)
# {}+ find appends found files at the end of the command (runs like ls cmd)
echo "$(find ${startdir} -maxdepth ${depth} -type f -exec stat -c '%x %n' {} + | sort -r| nl |head -5)"
echo " "

echo "Lastly modified files"
# not path means not taking hidden files. TY: year, Tm: month, Td: day, TH: hour, TM: minutes, TS: seconds, P: filename
echo "$(find ${startdir} -maxdepth ${depth} -type f -printf '%TY-%Tm-%Td %TH:%TM:%TS %P\n' |sort -nr| nl |head -n 5)"
echo " "




function dirs_with_more_files () {
    printf "%s \t %s\n" "$(find "$1" -maxdepth 1  -type f | wc -l)" "$1"
    find $1 -maxdepth $2 -mindepth 1 -type d | while read dir; do
        printf "%s \t %s\n" "$(find "$dir" -maxdepth 1  -type f | wc -l)" "$dir"
    done
}

echo "Dirs with more files (in the dir level)"
dirs_with_more_files ${startdir} ${depth} | sort -nr | nl | head -5
echo " "

function dirs_with_more_dirs {
# find all dirs within the first dir
    find $1 -maxdepth $2 -mindepth 1 -type d | while read dir; do
# for each dir find all subdirectories
         printf "%s \t %s\n" "$(find "$dir" -maxdepth 1 -mindepth 1 -type d | wc -l)" "$dir"
    done
}

echo "Dirs with more dirs (in the dir level)"
dirs_with_more_dirs ${startdir} ${depth} | sort -nr | nl | head -5
echo " "

# find largest directories (S means not to include subdir size and d is depth size)
echo "Largest dirs (sum of file sizes in the dir level)"
echo "$(du -S -d ${depth} ${startdir} | sort -nr| nl | head -5)"
echo " "

 # old requirement
echo "Lastly created files"
# print lastly created files(w means birthdate and n means file name)
# {}+ find appends found files at the end of the command (runs like ls cmd)
echo "$(find ${startdir} -maxdepth ${depth} -type f -exec stat -c '%w %n' {} + | sort -r| nl |head -5)"
echo " "
